"A datetime string with format `Y-m-d H:i:s`, e.g. `2018-01-01 13:00:00`."
scalar DateTime @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\DateTime")

"A date string with format `Y-m-d`, e.g. `2011-05-23`."
scalar Date @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\Date")

type Query {
    users: [User!]! @paginate(defaultCount: 10)
    user(id: ID @eq): User @find

    articles: [Article!]! @paginate(defaultCount: 10)
    article(id: ID @eq): Article @find

    wines: [Wine!]! @paginate(defaultCount: 10)
    wine(id: ID @eq): Wine @find

    user_profile: User @auth(guard: "api")
}

type Mutation {

    createUser(
        name: String!
        email: String! @rules(apply: ["email", "unique:users"])
        password: String! @bcrypt @rules(apply: ["min:6"])
    ): User @create


    createArticle(
        title: String!, slug: String!,excerpt:String,body:String): Article
        @field(resolver: "ArticleMutator@create"
    )@middleware(checks: ["auth:api"])



    login(
        email: String!
        password: String!
    ): String @field(resolver: "AuthMutator@resolve")
    # CHECK AUTHENTICATION

}


type User {
    id: ID!
    name: String!
    email: String!
    created_at: DateTime!
    updated_at: DateTime!
    articles: [Article!]! @hasMany
}

type Article {
    id: ID!
    user_id:Int
    title: String!
    excerpt: String!
    slug: String!
    body: String!
    created_at: DateTime!
    updated_at: DateTime!
    author: User! @belongsTo(relation: "user")
}

type Wine {
    id: ID!
    name: String!
    description: String
    color: String
    grape_variety: String
    country: String
    created_at: DateTime!
    updated_at: DateTime!
}


